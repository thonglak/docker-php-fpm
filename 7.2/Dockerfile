#
# This file is auto-generated by update.sh
#
# @package php/alpine/fpm
# @author  Yannoff <https://github.com/yannoff>
# @license MIT
#

FROM php:7.2-fpm-alpine

ARG PHP_EXTS="pdo pdo_mysql pdo_pgsql intl curl json opcache xml bcmath"
ARG PECL_EXTS
ARG WITH_COMPOSER

LABEL author="Yannoff <https://github.com/yannoff>" \
      description="PHP-FPM with basic php extensions and composer" \
      license="MIT"

COPY docker-pecl-ext-install /usr/local/bin
COPY docker-php-ext-getdeps  /usr/local/bin

# Install basic packages & PHP extensions
RUN \
    BUILD_DEPS="coreutils make"; \
    PHP_EXT_DEPS=`docker-php-ext-getdeps $PHP_EXTS`; \
    apk add --update $PHP_EXT_DEPS bash git && \
    docker-php-ext-install $PHP_EXTS; \
    \
    # Install temporary build dependencies
    apk add --no-cache --virtual build-deps ${BUILD_DEPS} && \
    \
    # Install composer
    #  - Download composer-setup.php & check for file integrity
    #  - Run composer installation script then remove it
    curl https://getcomposer.org/installer -o composer-setup.php; \
    ACTUAL_SIG=`sha384sum composer-setup.php | awk '{ printf "%s",$1; }'`; \
    EXPECTED_SIG=`curl -s https://composer.github.io/installer.sig | tr -d "\n"`; \
    [ "$ACTUAL_SIG" = "$EXPECTED_SIG" ] || echo "[composer] Error: signatures does not match!"; \
    php composer-setup.php --filename=composer --install-dir=/usr/bin && \
    rm composer-setup.php && \
    # When the container is run as an unknown user (e.g 1000), COMPOSER_HOME defaults to /.composer
    mkdir /.composer && chmod 0777 /.composer; \
    \
    # Install offenbach
    cd /tmp && git clone https://github.com/yannoff/offenbach.git && cd offenbach; \
    ./configure --bindir /usr/local/bin bin/offenbach && make && make install; \
    cd /tmp && rm -rf offenbach; \
    \
    # Cleanup: remove build dependencies
    apk del build-deps; \
    \
    # Purge APK cache
    rm -v /var/cache/apk/*
