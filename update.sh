#!/bin/bash
#
# @package php/alpine/fpm
# @author  Yannoff <https://github.com/yannoff>
# @license MIT
#

generate_dockerfile(){
    local dockerfile version
    version=$1
    case ${version} in
        latest)
            image="fpm-alpine"
            ;;
        [0-9]*)
            image="${1}-fpm-alpine"
            ;;
    esac
    dockerfile=./${version}/Dockerfile
    cat > ${dockerfile} <<TEMPLATE
#
# This file is auto-generated by update.sh
#
# @package php/alpine/fpm
# @author  Yannoff <https://github.com/yannoff>
# @license MIT
#

FROM php:${image}

LABEL author="Yannoff <https://github.com/yannoff>" \\
      description="PHP-FPM with basic php extensions and composer" \\
      license="MIT"

# Install basic packages & PHP extensions
RUN \\
    apk add --update postgresql-dev icu-dev curl-dev libxml2-dev bash && \\
    docker-php-ext-install pdo pdo_mysql pdo_pgsql intl curl json opcache xml bcmath; \\
    \\
    # Install composer
    #  - Temporarily install perl-digest-hmac to provide shasum tools
    #  - Download composer-setup.php & check for file integrity
    #  - Run composer installation script
    #  - Cleanup: remove installation script & perl-digest-hmac binaries
    apk add --no-cache --virtual build-deps perl-digest-hmac && \\
    curl https://getcomposer.org/installer -o composer-setup.php; \\
    ACTUAL_SIG=\`shasum -a 384 composer-setup.php | awk '{ printf "%s",\$1; }'\`; \\
    EXPECTED_SIG=\`curl -s https://composer.github.io/installer.sig | tr -d "\n"\`; \\
    [ "\$ACTUAL_SIG" = "\$EXPECTED_SIG" ] && \\
    php composer-setup.php --filename=composer --install-dir=/usr/bin && \\
    rm composer-setup.php && \\
    apk del build-deps; \\
    \\
    # Purge APK cache
    rm -v /var/cache/apk/*
TEMPLATE

}

if [ $# -eq 0 ]
then
    printf "Usage: %s <version> [<version> [<version>]]\n" $0
    exit 1
fi

for v in "$@"
do
    printf "Generating dockerfile for version %s..." ${v}
    mkdir -p $v 2>/dev/null
    generate_dockerfile $v
    printf "\033[01;32mOK\033[00m\n"
done
printf "\nCopying latest version to root Dockerfile..."
cp latest/Dockerfile . 2>/dev/null
printf "\033[01;32mOK\033[00m\n"
